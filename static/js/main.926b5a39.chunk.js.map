{"version":3,"sources":["components/List.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["List","items","removeItem","editItem","className","map","item","id","title","style","float","type","onClick","Alert","msg","removeAlert","list","useEffect","timeout","setTimeout","clearTimeout","App","useState","name","setName","localStorage","getItem","JSON","parse","setList","isEditing","setIdEditing","editID","setEditID","show","alert","setAlert","setItem","stringify","showAlert","onSubmit","e","preventDefault","newItem","Date","getTime","toString","marginBottom","textAlign","onChange","target","value","length","marginTop","filter","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.926b5a39.chunk.js","sourcesContent":["import React from 'react'\r\nimport {FaEdit,FaTrash} from \"react-icons/fa\"\r\n\r\n\r\nconst List = ({items ,removeItem ,editItem}) => {\r\n    return (\r\n        <div className=\"container\">\r\n            {items.map((item)=>{\r\n                const {id , title } = item;\r\n                return(\r\n                    <ul className=\"list-group list-group-flush \"key={id}>\r\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                    {title}\r\n                    <div style={{float:\"right\"}}>\r\n                    <button \r\n                    type=\"button\"\r\n                     className=\"edit-btn\"\r\n                     onClick={()=>editItem(id)}\r\n                    >\r\n                    <FaEdit />\r\n                    </button>\r\n                    <button type=\"button\"\r\n                     className=\"delete-btn\"\r\n                     onClick={()=>removeItem(id)}\r\n                    >\r\n                        <FaTrash />\r\n                        </button>\r\n                    </div>\r\n                    </li>\r\n                    </ul>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n","import React,{useEffect} from 'react'\r\n\r\nconst Alert = ({type , msg , removeAlert,list }) => {\r\n    useEffect(() => {\r\n        const timeout = setTimeout(()=>{\r\n            removeAlert();\r\n\r\n        },3000);\r\n        return () =>clearTimeout(timeout);\r\n     }, [list]);\r\n    return <p className={`alert alert-${type}`}>{msg}</p>\r\n    \r\n}\r\n\r\nexport default Alert\r\n","import React,{useState,useEffect} from \"react\"\nimport List from \"./components/List\"\nimport Alert from \"./components/Alert\"\n\nconst getLocalStorage = ()=>{\n  let list = localStorage.getItem(\"list\");\n  if(list){\n    return (list = JSON.parse(localStorage.getItem(\"list\")));\n\n  }else {\n    return [];\n  }\n};\nconst App= () =>{\n  const [name, setName] = useState(\"\");\n  const [list, setList] = useState(getLocalStorage());\n  const [isEditing, setIdEditing] = useState(false);\n  const [editID, setEditID] = useState(null)\n  const [alert, setAlert] = useState({show:false, msg:\"\",type:\"\"})\n  \n  useEffect(() => {\n    localStorage.setItem(\"list\",JSON.stringify(list));\n    \n  }, [list])\n  const handleSubmit =(e)=>{\n    e.preventDefault();\n    if(!name){\n      showAlert(true,\"danger\",\"Please Enter Value\");\n\n    }else if(name && isEditing) {\n      setList(\n        list.map((item)=>{\n          if(item.id === editID){\n            return {...item , title:name}\n          }\n          return item\n        })\n      )\n      setName(\"\");\n      setEditID(null);\n      setIdEditing(false);\n      showAlert(true, \"success\" , \"Value Changes\")\n    }else {\n      showAlert(true, \"success\" , \"Item Added to the List\");\n      const newItem = {id:new Date().getTime().toString(),title:name};\n      setList([...list , newItem]);\n      setName(\"\"); \n    }\n\n  }\n  const showAlert =(show = false , type = \"\" , msg = \"\") =>{\n  setAlert({show , type , msg });\n  }\n  const removeItem =(id) =>{\n   showAlert(true , \"danger\" , \"Item Removd\");\n   setList(list.filter((item)=> item.id !== id));\n\n  } \n  const editItem = (id)=>{\n    const editItem = list.find((item)=> item.id === id);\n    setIdEditing(true);\n    setEditID(id);\n    setName(editItem.title);\n\n  }\n  const clearList = ()=>{\n    showAlert(true, \"danger\" , \"Empty List\");\n    setList([])\n  } \n  \n   return (\n\n    <section className=\"section-center\" >\n    <form onSubmit={handleSubmit}>\n     {alert.show && <Alert {...alert} removeAlert={showAlert} list={list}/>}\n     <h3 style={{marginBottom:\"1.5rem\" , textAlign:\"center\"}}>Todo List</h3>\n     <div className=\"mb-3 form\">\n       <input \n       type=\"text\"\n       className=\"form-control\"\n       onChange={(e) => setName(e.target.value)}\n       value={name}\n       />\n       <button type=\"submit\" className=\"btn btn-success\">\n         {isEditing ? \"Edit\" : \"submit\"}\n       </button>\n     </div>\n    </form>\n      {list.length > 0 && (\n        <div style={{ marginTop:\"2rem\"}}>\n          <List items={list} removeItem={removeItem} editItem={editItem} />\n        <div className=\"text-center\">\n          <button className=\"btn btn-warning\" onClick={clearList}>\n            Clear Items\n          </button>\n        </div>\n        </div>\n      )}\n    </section>\n  )\n} \n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}